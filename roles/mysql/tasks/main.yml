  - name: Configuring the  {{ COMPONENT }} Repository
    ansible.builtin.copy:
      src: mysql.repo
      dest: /etc/yum.repos.d/{{ COMPONENT }}.repo

  - name: Installing {{ COMPONENT }} 
    ansible.builtin.package:
     name: mysql-community-server
     state: present 



  - name: starting {{ COMPONENT }}
    ansible.builtin.systemd:
      name: mysqld
      state: started
      enabled: true

  - name: Fetch the log file from the remote node
    ansible.builtin.slurp:
      src: /var/log/mysqld.log
    register: mysql_pwd_log


# Rescue and Blocks work together ; Tasks in rescue will only be excuted if the task in the block fails
  - name : Validate the Default password
    block:
       - name: Get MySQL version with non-default credentials
         community.mysql.mysql_info:
            login_user: root
            login_password: RoboShop@1
            filter: version
    rescue:
          - name: Fetch the log file from the remote node 
            ansible.builtin.slurp:
              src: /var/log/mysqld.log
            register: mysql_pwd_log

          - name: Grep the password and assign it to  a variable
            ansible.builtin.set_fact:
              DEFAULT_PASSWORD: "{{ mysql_pwd_log['content'] | b64decode | regex_findall('.*temporary password.*') | join (' ') | split (' ') | last }}"

          - name: Reset {{COMPONENT}}  Default root password
            ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY 'RoboShop@1';" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}"
     

    
  - name: Configuring Node name Repo
    ansible.builtin.shell: set-hostname {{ COMPONENT }}-{{ENV}}


  


  - name: Download and Extract {{ COMPONENT }} schema 
    ansible.builtin.include_role:
     name: common
     tasks_from: download



  - name: Injecting the {{ COMPONENT }} Schema
    community.mysql.mysql_db:
      state: import
      name: all
    target: /tmp/{{ COMPONENT }}-main/{{ COMPONENT }}.sql
    login_user: root
    login_password: RoboShop@1 

